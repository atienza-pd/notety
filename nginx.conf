# Nginx config for serving Angular PWA over HTTP and HTTPS

# HTTP server: serve app over HTTP as well (localhost dev)
server {
  listen 80;
  server_name _;
  root /usr/share/nginx/html/browser;
  index index.html;
  location / { try_files $uri $uri/ /index.html; }
  # Manifest MIME & no-cache
  include /etc/nginx/mime.types;
  types { application/manifest+json webmanifest; }
  location = /manifest.webmanifest { add_header Cache-Control "no-cache"; try_files $uri =404; }
}

server {
  listen 443 ssl http2;
  server_name _;

  ssl_certificate     /etc/nginx/certs/server.crt;
  ssl_certificate_key /etc/nginx/certs/server.key;

  root /usr/share/nginx/html/browser;
  index index.html;

  # SPA fallback
  location / { try_files $uri $uri/ /index.html; }

  # Do not cache service worker & config (allow updates)
  location = /ngsw-worker.js { add_header Cache-Control "no-cache, no-store, must-revalidate"; expires -1; try_files $uri =404; }
  location = /ngsw.json      { add_header Cache-Control "no-cache, no-store, must-revalidate"; expires -1; try_files $uri =404; }

  # Long-cache hashed static assets
  location ~* \.(?:js|css|png|jpg|jpeg|gif|svg|webp|ico|woff2?)$ {
    expires 1y;
    add_header Cache-Control "public, max-age=31536000, immutable";
    try_files $uri =404;
  }

  # Manifest MIME & no-cache
  include /etc/nginx/mime.types;
  types { application/manifest+json webmanifest; }
  location = /manifest.webmanifest { add_header Cache-Control "no-cache"; try_files $uri =404; }

  # Optional: avoid caching the app shell
  location = /index.html { add_header Cache-Control "no-cache"; try_files $uri =404; }
}
